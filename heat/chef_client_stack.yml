heat_template_version: 2013-05-23

description:
  template should spin up a single FC20 instance and bootstrap it with a working chef-client

parameters:
  myMonde:
    type: string
    default: "Terra1"
  foo:
    type: string
    default: "barbaz"
  myimagename:
    type: string
    label: myimagename
    description: cloud image to use for the instance
    default: "Fedora 20 (Heisenbug) (PVHVM)"
    hidden: false
    constraints:
      - length: { min: 6 }
        description: image name length must be at least 6 characters.
  myhostname:
    type: string
    label: myhostname
    description: base hostname of the instance
    default: "eggs687"
    hidden: false
    constraints:
      - allowed_pattern: "[a-z0-9]+"
        description: hostname must consist of lowercase characters and numbers only.
      - length: { min: 4, max: 8 }
        description: Hostname length must be between 6 and 8 characters.
  myadminpass:
    type: string
    label: myadminpass
    description: root password
    default: "h@d0uke3N"
    hidden: false
    constraints:
      - length: { min: 8 }
        description: Password should be at least 8 characters

resources:
  compute_instance:
    type: "Rackspace::Cloud::Server"
    properties:
      admin_pass: { get_param: myadminpass }
      flavor: 512MB Standard Instance
      image: { get_param: myimagename }
      name: { get_param: myhostname }
      personality: { 
        "/etc/sysconfig/iptables": { get_file: ./support/iptables.config },
        "/opt/raxapitest/chef_client_bootstrap.sh": { get_file: ./support/chef_client_bootstrap.sh },
        "/opt/raxapitest/chef_client_bootstrap.env": { get_file: ./support/chef_client_bootstrap.env }
      }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo "Hello $monde" > /var/tmp/hmonde;
            bash /opt/raxapitest/chef_client_bootstrap.sh;
          params:
            $monde: { get_param: myMonde }

outputs:
  foo:
    description: foo
    value: { get_param: foo }
  public_ip:
    description: public IP of the deployed instance
    value: { get_attr: [compute_instance, accessIPv4] }
  instance_param_hostname:
    description: hostname according to the myhostname param
    value: { get_param: myhostname }
  displayname:
    description: myhostname with newline chaacters
    value:
      str_replace:
        template: name\n
        params:
          name: { get_param: myhostname }
  instance_details:
    description: details of new instance
    value: { get_attr: [compute_instance, show] }

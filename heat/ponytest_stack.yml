heat_template_version: 2013-05-23

description:
  template should spin up a single FC20 instance

parameters:
  myMonde:
    type: string
    default: "Terra1"
  foo:
    type: string
    default: "barbaz"
  myimagename:
    type: string
    label: myimagename
    description: cloud image to use for the instance
    default: "Fedora 20 (Heisenbug) (PVHVM)"
    hidden: false
    constraints:
      #- allowed_pattern: "[a-z0-9]+"
      #  description: hostname must consist of lowercase characters and numbers only.
      - length: { min: 6 }
        description: image name length must be at least 6 characters.
  myhostname:
    type: string
    label: myhostname
    description: base hostname of the instance
    default: "eggs687"
    hidden: false
    constraints:
      - allowed_pattern: "[a-z0-9]+"
        description: hostname must consist of lowercase characters and numbers only.
      - length: { min: 4, max: 8 }
        description: Hostname length must be between 6 and 8 characters.
  myadminpass:
    type: string
    label: myadminpass
    description: root password
    default: "h@d0uke3N"
    hidden: false
    constraints:
      #- allowed_pattern: "[A-Za-z0-9]+"
      #  description: I love regexes
      - length: { min: 8 }
        description: Password should be at least 8 characters

#parameter_groups:
#   label: host_parameter_inputs
#     parameters:
#       my_hostname
#         type: string
#         label: my_hostname
#         description: base hostname of the instance
#         default: "test001"
#         hidden: false
#         constraints: 
#           - allowed_pattern: "[a-z0-9]+"
#             description: hostname must consist of lowercase characters and numbers only.
#           - length: { min: 6, max: 8 }
#             description: Password length must be between 6 and 8 characters.
#       adminPass
#         type: <string | number | json | comma_delimited_list>
#         label: <human-readable name of the parameter>
#         description: <description of the parameter>
#         default: <default value for parameter>
#         hidden: <true | false>
#         constraints:
#           <parameter constraints>
#       flavor
#       image
#       hostname
#       datavol_size
    
resources:
  compute_instance:
    type: "Rackspace::Cloud::Server"
    properties:
      admin_pass: { get_param: myadminpass }
      flavor: 512MB Standard Instance
      image: { get_param: myimagename }
      name: { get_param: myhostname }
      #personality: {"/etc/hostname": { get_param: myhostname }, "/etc/sysconfig/iptables": { get_file: /home/admin/code/archii/raxapitest/heat/iptables.config } }
      #personality: {"/etc/hostname": { get_param: foo } }
      personality: { 
        "/etc/sysconfig/iptables": { get_file: /home/admin/code/archii/raxapitest/heat/support/iptables.config }
      }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo "Hello $monde" > /var/tmp/hmonde;
            sleep 60;
            yum -y -v remove firewalld && \
            yum -y -v install iptables-services && \
            sleep 30 && \
            service iptables restart;
            yum -y -v update && \
            systemctl enable iptables.service && \
            exit 0;
            #yum -y -v install git;
            #
            #$echo "Setting MySQL root password"
            #mysqladmin -u root password $db_rootpassword
            # do more things ...
          params:
            #$db_rootpassword: { get_param: DBRootPassword }
            $monde: { get_param: myMonde }
#
#      user_data: >
#          #!/bin/bash
#          echo "Hello $monde" \| tee /var/tmp/hmonde
#          yum remove firewalld
#          yum install iptables-services
#          yum install git
#          #service iptables-service restart
#          #$echo "Setting MySQL root password"
#          #mysqladmin -u root password $db_rootpassword
#          # do more things ...
#          
outputs:
  foo:
    description: foo
    value: { get_param: foo }
  public_ip:
    description: public IP of the deployed instance
    value: { get_attr: [compute_instance, accessIPv4] }
#  instance_name:
#    description: name of new instance
#    value: { get_attr: [compute_instance, instance_name] }
  instance_param_hostname:
    description: hostname according to the myhostname param
    value: { get_param: myhostname }
  displayname:
    description: myhostname with newline chaacters
    value:
      str_replace:
        template: name\n
        params:
          name: { get_param: myhostname }
  instance_details:
    description: details of new instance
    value: { get_attr: [compute_instance, show] }

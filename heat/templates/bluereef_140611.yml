heat_template_version: 2013-05-23

description: |
  A Description

parameters:
  instance_name:
    description: Server Name
    type: string
    default: breef140611
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters or hyphens.

  image:
    description: Server Image
    type: string
    default: Red Hat Enterprise Linux 6.5 (PVHVM)
    constraints:
    - allowed_values:
      - Red Hat Enterprise Linux 6.5 (PVHVM)
      description: RHEL 6.5

  flavor:
    description: Rackspace Cloud Server flavor
    type: string
    default: 1GB Standard Instance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  chef_server_url:
    type: string
    description: Url to the chef server
    default: "https://our.chef.server"

  run_list:
    type: string
    description: |
      The initial run list to execute. Ex:
        - "recipe[apache2]"
        - "role[db]"
    default: |
      - "role[our-role]"

  validation_name:
    type: string
    default: "chef-validator"

  environment_name:
    type: string
    default: "rs-svr"

  attributes:
    type: string
    description: |
      Attributes to apply for the chef run. Ex:
        apache:
            prefork:
                maxclients: 100
    default: ""

  network_list:
    type: string
    description: |
      List of networks to add to the machines.  Straight zeros: PublicNet. Straight ones: ServiceNet. custom UUID: ours
#    default: [{"uuid": "00000000-0000-0000-0000-000000000000"}, {"uuid": "11111111-1111-1111-1111-111111111111"}, {"uuid": "our-own-private-network-uuid"}]
    default: [{"uuid": "00000000-0000-0000-0000-000000000000"}, {"uuid": "11111111-1111-1111-1111-111111111111"}]


resources:
  serverResourceGroup:
    type: OS::Heat::ResourceGroup
    properties:
      count: 3
      resource_def: {
        type: "Rackspace::Cloud::Server", 
        "properties": {
          "flavor": { get_param: flavor }, "image": { get_param: image }
      }}

#  server-1:
#    type: Rackspace::Cloud::Server
#    properties:
#      name: server1
#      flavor: { get_param: flavor }
#      image: { get_param: image }
#      networks: { get_param: network_list }
#      config_drive: "true"
#      user_data_format: RAW
#      user_data: 
#        str_replace:
#          template: |
#            #cloud-config
#            chef:
#              install_type: "omnibus"
#              force_install: false
#              node_name: "%instance_name%-server-1"
#              server_url: "%chef_server_url%"
#              validation_name: "%validation_name%"
#              environment: "%environment_name%"
#              validation_key: |
#                -----BEGIN RSA PRIVATE KEY-----
#               blah
#               blah
#               blah
#               blah
#                -----END RSA PRIVATE KEY-----
#              run_list:
#                %run_list%
#              attributes: %attributes%
#              omnibus_url: "https://www.opscode.com/chef/install.sh"
#            runcmd:
#              - [ chef-client ]
#              - [ sed, -e, 's/^json_attribs/\#json_attribs/', -i, /etc/chef/client.rb ]
#          params:
#            "%chef_server_url%": {get_param: chef_server_url}
#            "%attributes%": {get_param: attributes}
#            "%run_list%": {get_param: run_list}
#            "%validation_name%": {get_param: validation_name}
#            "%instance_name%": {get_param: instance_name}
#            "%environment_name%": {get_param: environment_name}
    
#  server-2:
#    type: Rackspace::Cloud::Server
#    properties:
#      name: server2 
#      flavor: { get_param: flavor }
#      image: { get_param: image }
#      networks: { get_param: network_list }
#      config_drive: "true"
#      user_data_format: RAW
#      user_data: 
#        str_replace:
#          template: |
#            #cloud-config
#            chef:
#              install_type: "omnibus"
#              force_install: false
#              node_name: "%instance_name%-server-2"
#              server_url: "%chef_server_url%"
#              validation_name: "%validation_name%"
#              environment: "%environment_name%"
#              validation_key: |
#                -----BEGIN RSA PRIVATE KEY-----
#               blah
#               blah
#               blah
#               blah
#                -----END RSA PRIVATE KEY-----
#              run_list:
#                %run_list%
#              attributes: %attributes%
#              omnibus_url: "https://www.opscode.com/chef/install.sh"
#            runcmd:
#              - [ chef-client ]
#              - [ sed, -e, 's/^json_attribs/\#json_attribs/', -i, /etc/chef/client.rb ]
#          params:
#            "%chef_server_url%": {get_param: chef_server_url}
#            "%attributes%": {get_param: attributes}
#            "%run_list%": {get_param: run_list}
#            "%validation_name%": {get_param: validation_name}
#            "%instance_name%": {get_param: instance_name}
#            "%environment_name%": {get_param: environment_name}

  server_lb:
    type: Rackspace::Cloud::LoadBalancer
    properties:
      name:
        str_replace:
          template: $stack_name-server-lb
          params:
            $stack_name: { get_param: instance_name }
      nodes:
#      nodes: [{
#        addresses: [{ get_attr: [server-1,accessIPv4]}],
#        prt: 8000,
#        condition: ENABLED,
#        type: PRIMARY
#        },{
#        addresses: [{ get_attr: [server-2,accessIPv4]}],
#        prt: 8000,
#        condition: ENABLED,
#        type: SECONDARY
#        }
#      ]
#      healthMonitor:
#        attemptsBeforeDeactivation: 3
#        delay: 30
#        timeout: 60
#        type: HTTP
#        path: "/"
#        statusRegex: "."
#        bodyRegex: "."
      protocol: HTTP
      port: 80
      virtualIps:
      - type: PUBLIC
        ipVersion: IPV4
    
#outputs:
#  server-1_all_net:
#    description: public IP address of the deployed compute instance
#    value: { get_attr: [server-1, networks] }
#
#  server-2_all_net:
#    description: public IP address of the deployed compute instance
#    value: { get_attr: [server-2, networks] }
#
#  server-lb:
#    description: Pub IP of the load balancer
#    value: { get_attr: [server-lb, PublicIp]}

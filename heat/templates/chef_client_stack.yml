heat_template_version: 2013-05-23

description:
  template will spin up a single FC20 instance and bootstrap it with a working chef-client

parameters:
  myimagename:
    type: string
    label: myimagename
    description: cloud image to use for the instance
    default: "tcserious_image-20140429"
    hidden: false
    constraints:
      - length: { min: 6 }
        description: image name length must be at least 6 characters.
  myflavor:
    type: string
    label: myflavor
    description: sizing for instance
    default: 512MB Standard Instance
    hidden: false
    constraints:
      - allowed_values:
        - 512MB Standard Instance
        - 1GB Standard Instance
        - 2GB Standard Instance
        - 4GB Standard Instance
        - 8GB Standard Instance
  myhostname:
    type: string
    label: myhostname
    description: base hostname of the instance
    default: "ccnode01"
    hidden: false
    constraints:
      - allowed_pattern: "[a-z0-9]+"
        description: hostname must consist of lowercase characters and numbers only.
      - length: { min: 4, max: 8 }
        description: Hostname length must be between 6 and 8 characters.
  myadminpass:
    type: string
    label: myadminpass
    description: root password
    default: "h@d0uke3N"
    hidden: false
    constraints:
      - length: { min: 8 }
        description: Password should be at least 8 characters

resources:
  compute_instance:
    type: "Rackspace::Cloud::Server"
    properties:
      admin_pass: { get_param: myadminpass }
      flavor: { get_param: myflavor }
      image: { get_param: myimagename }
      name: { get_param: myhostname }
      user_data: |
        #!/bin/bash
        curl -L https://www.opscode.com/chef/install.sh | bash;

outputs:
  public_ip:
    description: public IP of the deployed instance
    value: { get_attr: [compute_instance, accessIPv4] }
  instance_param_hostname:
    description: hostname according to the myhostname param
    value: { get_param: myhostname }
  instance_details:
    description: details of new instance
    value: { get_attr: [compute_instance, show] }
